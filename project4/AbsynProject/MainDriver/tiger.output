Terminals unused in grammar

   DOT
   OF
   NIL


State 60 conflicts: 1 shift/reduce
State 77 conflicts: 13 shift/reduce
State 78 conflicts: 12 shift/reduce
State 80 conflicts: 1 shift/reduce
State 98 conflicts: 12 shift/reduce
State 112 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp
    2        | /* empty */

    3 decs: /* empty */
    4     | t_decs

    5 t_decs: dec t_decs
    6       | dec
    7       | t_decs error

    8 dec: typedec
    9    | vardec
   10    | funcdec

   11 typedec: TYPE ID EQ tpinfo
   12        | TYPE error EQ tpinfo

   13 tpinfo: ID

   14 vardec: VAR ID ASSIGN exp
   15       | VAR ID COLON ID ASSIGN exp

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp
   17        | FUNCTION ID LPAREN RPAREN COLON ID EQ exp
   18        | FUNCTION ID LPAREN typefields RPAREN EQ exp
   19        | FUNCTION ID LPAREN RPAREN EQ exp

   20 typefields: /* empty */
   21           | ID COLON ID COMMA typefields
   22           | ID COLON ID

   23 lvalue: ID

   24 exp: lvalue
   25    | exp PLUS exp
   26    | exp MINUS exp
   27    | exp TIMES exp
   28    | exp DIVIDE exp
   29    | MINUS exp
   30    | expseq
   31    | INT
   32    | STRING
   33    | ID LPAREN paramlist RPAREN
   34    | exp EQ exp
   35    | exp NEQ exp
   36    | exp LT exp
   37    | exp LE exp
   38    | exp GT exp
   39    | exp GE exp
   40    | exp AND exp
   41    | exp OR exp
   42    | lvalue ASSIGN exp
   43    | IF exp THEN exp ELSE exp
   44    | IF exp THEN exp
   45    | WHILE exp DO exp
   46    | FOR ID ASSIGN exp TO exp DO exp
   47    | BREAK
   48    | LET decs IN explist END

   49 expseq: LPAREN explist RPAREN

   50 explist: /* empty */
   51        | t_explist

   52 t_explist: exp
   53          | exp SEMICOLON t_explist

   54 paramlist: /* empty */
   55          | t_paramlist

   56 t_paramlist: exp
   57            | exp COMMA t_paramlist


Terminals, with rules where they appear

$end (0) 0
error (256) 7 12
ID (258) 11 13 14 15 16 17 18 19 21 22 23 33 46
STRING (259) 32
INT (260) 31
COMMA (261) 21 57
COLON (262) 15 16 17 21 22
SEMICOLON (263) 53
LPAREN (264) 16 17 18 19 33 49
RPAREN (265) 16 17 18 19 33 49
DOT (266)
IF (267) 43 44
THEN (268) 43 44
ELSE (269) 43
WHILE (270) 45
FOR (271) 46
TO (272) 46
DO (273) 45 46
LET (274) 48
IN (275) 48
END (276) 48
OF (277)
BREAK (278) 47
NIL (279)
FUNCTION (280) 16 17 18 19
VAR (281) 14 15
TYPE (282) 11 12
ASSIGN (283) 14 15 42 46
OR (284) 41
AND (285) 40
GE (286) 39
GT (287) 38
LE (288) 37
LT (289) 36
NEQ (290) 35
EQ (291) 11 12 16 17 18 19 34
MINUS (292) 26 29
PLUS (293) 25
DIVIDE (294) 28
TIMES (295) 27
UMINUS (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2, on right: 0
decs (44)
    on left: 3 4, on right: 48
t_decs (45)
    on left: 5 6 7, on right: 4 5 7
dec (46)
    on left: 8 9 10, on right: 5 6
typedec (47)
    on left: 11 12, on right: 8
tpinfo (48)
    on left: 13, on right: 11 12
vardec (49)
    on left: 14 15, on right: 9
funcdec (50)
    on left: 16 17 18 19, on right: 10
typefields (51)
    on left: 20 21 22, on right: 16 18 21
lvalue (52)
    on left: 23, on right: 24 42
exp (53)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46 47 48, on right: 1 14 15 16 17 18 19 25 26 27 28
    29 34 35 36 37 38 39 40 41 42 43 44 45 46 52 53 56 57
expseq (54)
    on left: 49, on right: 30
explist (55)
    on left: 50 51, on right: 48 49
t_explist (56)
    on left: 52 53, on right: 51 53
paramlist (57)
    on left: 54 55, on right: 33
t_paramlist (58)
    on left: 56 57, on right: 55 57


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    $default  reduce using rule 2 (program)

    program  go to state 11
    lvalue   go to state 12
    exp      go to state 13
    expseq   go to state 14


state 1

   23 lvalue: ID .
   33 exp: ID . LPAREN paramlist RPAREN

    LPAREN  shift, and go to state 15

    $default  reduce using rule 23 (lvalue)


state 2

   32 exp: STRING .

    $default  reduce using rule 32 (exp)


state 3

   31 exp: INT .

    $default  reduce using rule 31 (exp)


state 4

   49 expseq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    $default  reduce using rule 50 (explist)

    lvalue     go to state 12
    exp        go to state 16
    expseq     go to state 14
    explist    go to state 17
    t_explist  go to state 18


state 5

   43 exp: IF . exp THEN exp ELSE exp
   44    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 19
    expseq  go to state 14


state 6

   45 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 20
    expseq  go to state 14


state 7

   46 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 21


state 8

   48 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 3 (decs)

    decs     go to state 25
    t_decs   go to state 26
    dec      go to state 27
    typedec  go to state 28
    vardec   go to state 29
    funcdec  go to state 30


state 9

   47 exp: BREAK .

    $default  reduce using rule 47 (exp)


state 10

   29 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 31
    expseq  go to state 14


state 11

    0 $accept: program . $end

    $end  shift, and go to state 32


state 12

   24 exp: lvalue .
   42    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 33

    $default  reduce using rule 24 (exp)


state 13

    1 program: exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 1 (program)


state 14

   30 exp: expseq .

    $default  reduce using rule 30 (exp)


state 15

   33 exp: ID LPAREN . paramlist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    $default  reduce using rule 54 (paramlist)

    lvalue       go to state 12
    exp          go to state 46
    expseq       go to state 14
    paramlist    go to state 47
    t_paramlist  go to state 48


state 16

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   52 t_explist: exp .
   53          | exp . SEMICOLON t_explist

    SEMICOLON  shift, and go to state 49
    OR         shift, and go to state 34
    AND        shift, and go to state 35
    GE         shift, and go to state 36
    GT         shift, and go to state 37
    LE         shift, and go to state 38
    LT         shift, and go to state 39
    NEQ        shift, and go to state 40
    EQ         shift, and go to state 41
    MINUS      shift, and go to state 42
    PLUS       shift, and go to state 43
    DIVIDE     shift, and go to state 44
    TIMES      shift, and go to state 45

    $default  reduce using rule 52 (t_explist)


state 17

   49 expseq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 50


state 18

   51 explist: t_explist .

    $default  reduce using rule 51 (explist)


state 19

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   43    | IF exp . THEN exp ELSE exp
   44    | IF exp . THEN exp

    THEN    shift, and go to state 51
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 20

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   45    | WHILE exp . DO exp

    DO      shift, and go to state 52
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 21

   46 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 53


state 22

   16 funcdec: FUNCTION . ID LPAREN typefields RPAREN COLON ID EQ exp
   17        | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp
   18        | FUNCTION . ID LPAREN typefields RPAREN EQ exp
   19        | FUNCTION . ID LPAREN RPAREN EQ exp

    ID  shift, and go to state 54


state 23

   14 vardec: VAR . ID ASSIGN exp
   15       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 55


state 24

   11 typedec: TYPE . ID EQ tpinfo
   12        | TYPE . error EQ tpinfo

    error  shift, and go to state 56
    ID     shift, and go to state 57


state 25

   48 exp: LET decs . IN explist END

    IN  shift, and go to state 58


state 26

    4 decs: t_decs .
    7 t_decs: t_decs . error

    error  shift, and go to state 59

    IN  reduce using rule 4 (decs)


state 27

    5 t_decs: dec . t_decs
    6       | dec .

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 6 (t_decs)

    t_decs   go to state 60
    dec      go to state 27
    typedec  go to state 28
    vardec   go to state 29
    funcdec  go to state 30


state 28

    8 dec: typedec .

    $default  reduce using rule 8 (dec)


state 29

    9 dec: vardec .

    $default  reduce using rule 9 (dec)


state 30

   10 dec: funcdec .

    $default  reduce using rule 10 (dec)


state 31

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   29    | MINUS exp .
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    $default  reduce using rule 29 (exp)


state 32

    0 $accept: program $end .

    $default  accept


state 33

   42 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 61
    expseq  go to state 14


state 34

   41 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 62
    expseq  go to state 14


state 35

   40 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 63
    expseq  go to state 14


state 36

   39 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 64
    expseq  go to state 14


state 37

   38 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 65
    expseq  go to state 14


state 38

   37 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 66
    expseq  go to state 14


state 39

   36 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 67
    expseq  go to state 14


state 40

   35 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 68
    expseq  go to state 14


state 41

   34 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 69
    expseq  go to state 14


state 42

   26 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 70
    expseq  go to state 14


state 43

   25 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 71
    expseq  go to state 14


state 44

   28 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 72
    expseq  go to state 14


state 45

   27 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 73
    expseq  go to state 14


state 46

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   56 t_paramlist: exp .
   57            | exp . COMMA t_paramlist

    COMMA   shift, and go to state 74
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 56 (t_paramlist)


state 47

   33 exp: ID LPAREN paramlist . RPAREN

    RPAREN  shift, and go to state 75


state 48

   55 paramlist: t_paramlist .

    $default  reduce using rule 55 (paramlist)


state 49

   53 t_explist: exp SEMICOLON . t_explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue     go to state 12
    exp        go to state 16
    expseq     go to state 14
    t_explist  go to state 76


state 50

   49 expseq: LPAREN explist RPAREN .

    $default  reduce using rule 49 (expseq)


state 51

   43 exp: IF exp THEN . exp ELSE exp
   44    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 77
    expseq  go to state 14


state 52

   45 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 78
    expseq  go to state 14


state 53

   46 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 79
    expseq  go to state 14


state 54

   16 funcdec: FUNCTION ID . LPAREN typefields RPAREN COLON ID EQ exp
   17        | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp
   18        | FUNCTION ID . LPAREN typefields RPAREN EQ exp
   19        | FUNCTION ID . LPAREN RPAREN EQ exp

    LPAREN  shift, and go to state 80


state 55

   14 vardec: VAR ID . ASSIGN exp
   15       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 81
    ASSIGN  shift, and go to state 82


state 56

   12 typedec: TYPE error . EQ tpinfo

    EQ  shift, and go to state 83


state 57

   11 typedec: TYPE ID . EQ tpinfo

    EQ  shift, and go to state 84


state 58

   48 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    $default  reduce using rule 50 (explist)

    lvalue     go to state 12
    exp        go to state 16
    expseq     go to state 14
    explist    go to state 85
    t_explist  go to state 18


state 59

    7 t_decs: t_decs error .

    $default  reduce using rule 7 (t_decs)


state 60

    5 t_decs: dec t_decs .
    7       | t_decs . error

    error  shift, and go to state 59

    error  [reduce using rule 5 (t_decs)]
    IN     reduce using rule 5 (t_decs)


state 61

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   42    | lvalue ASSIGN exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 42 (exp)


state 62

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   41    | exp OR exp .

    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 41 (exp)


state 63

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   40    | exp AND exp .
   41    | exp . OR exp

    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 40 (exp)


state 64

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   39    | exp GE exp .
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 39 (exp)


state 65

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   38    | exp GT exp .
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 38 (exp)


state 66

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   37    | exp LE exp .
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 37 (exp)


state 67

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   36    | exp LT exp .
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 36 (exp)


state 68

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   35    | exp NEQ exp .
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 35 (exp)


state 69

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   34    | exp EQ exp .
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 34 (exp)


state 70

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   26    | exp MINUS exp .
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 26 (exp)


state 71

   25 exp: exp . PLUS exp
   25    | exp PLUS exp .
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 25 (exp)


state 72

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   28    | exp DIVIDE exp .
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    $default  reduce using rule 28 (exp)


state 73

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   27    | exp TIMES exp .
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    $default  reduce using rule 27 (exp)


state 74

   57 t_paramlist: exp COMMA . t_paramlist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue       go to state 12
    exp          go to state 46
    expseq       go to state 14
    t_paramlist  go to state 86


state 75

   33 exp: ID LPAREN paramlist RPAREN .

    $default  reduce using rule 33 (exp)


state 76

   53 t_explist: exp SEMICOLON t_explist .

    $default  reduce using rule 53 (t_explist)


state 77

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   43    | IF exp THEN exp . ELSE exp
   44    | IF exp THEN exp .

    ELSE    shift, and go to state 87
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    ELSE      [reduce using rule 44 (exp)]
    OR        [reduce using rule 44 (exp)]
    AND       [reduce using rule 44 (exp)]
    GE        [reduce using rule 44 (exp)]
    GT        [reduce using rule 44 (exp)]
    LE        [reduce using rule 44 (exp)]
    LT        [reduce using rule 44 (exp)]
    NEQ       [reduce using rule 44 (exp)]
    EQ        [reduce using rule 44 (exp)]
    MINUS     [reduce using rule 44 (exp)]
    PLUS      [reduce using rule 44 (exp)]
    DIVIDE    [reduce using rule 44 (exp)]
    TIMES     [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


state 78

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   45    | WHILE exp DO exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 45 (exp)]
    AND       [reduce using rule 45 (exp)]
    GE        [reduce using rule 45 (exp)]
    GT        [reduce using rule 45 (exp)]
    LE        [reduce using rule 45 (exp)]
    LT        [reduce using rule 45 (exp)]
    NEQ       [reduce using rule 45 (exp)]
    EQ        [reduce using rule 45 (exp)]
    MINUS     [reduce using rule 45 (exp)]
    PLUS      [reduce using rule 45 (exp)]
    DIVIDE    [reduce using rule 45 (exp)]
    TIMES     [reduce using rule 45 (exp)]
    $default  reduce using rule 45 (exp)


state 79

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   46    | FOR ID ASSIGN exp . TO exp DO exp

    TO      shift, and go to state 88
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 80

   16 funcdec: FUNCTION ID LPAREN . typefields RPAREN COLON ID EQ exp
   17        | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp
   18        | FUNCTION ID LPAREN . typefields RPAREN EQ exp
   19        | FUNCTION ID LPAREN . RPAREN EQ exp

    ID      shift, and go to state 89
    RPAREN  shift, and go to state 90

    RPAREN  [reduce using rule 20 (typefields)]

    typefields  go to state 91


state 81

   15 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 92


state 82

   14 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 93
    expseq  go to state 14


state 83

   12 typedec: TYPE error EQ . tpinfo

    ID  shift, and go to state 94

    tpinfo  go to state 95


state 84

   11 typedec: TYPE ID EQ . tpinfo

    ID  shift, and go to state 94

    tpinfo  go to state 96


state 85

   48 exp: LET decs IN explist . END

    END  shift, and go to state 97


state 86

   57 t_paramlist: exp COMMA t_paramlist .

    $default  reduce using rule 57 (t_paramlist)


state 87

   43 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 98
    expseq  go to state 14


state 88

   46 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 99
    expseq  go to state 14


state 89

   21 typefields: ID . COLON ID COMMA typefields
   22           | ID . COLON ID

    COLON  shift, and go to state 100


state 90

   17 funcdec: FUNCTION ID LPAREN RPAREN . COLON ID EQ exp
   19        | FUNCTION ID LPAREN RPAREN . EQ exp

    COLON  shift, and go to state 101
    EQ     shift, and go to state 102


state 91

   16 funcdec: FUNCTION ID LPAREN typefields . RPAREN COLON ID EQ exp
   18        | FUNCTION ID LPAREN typefields . RPAREN EQ exp

    RPAREN  shift, and go to state 103


state 92

   15 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 104


state 93

   14 vardec: VAR ID ASSIGN exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 14 (vardec)


state 94

   13 tpinfo: ID .

    $default  reduce using rule 13 (tpinfo)


state 95

   12 typedec: TYPE error EQ tpinfo .

    $default  reduce using rule 12 (typedec)


state 96

   11 typedec: TYPE ID EQ tpinfo .

    $default  reduce using rule 11 (typedec)


state 97

   48 exp: LET decs IN explist END .

    $default  reduce using rule 48 (exp)


state 98

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   43    | IF exp THEN exp ELSE exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 43 (exp)]
    AND       [reduce using rule 43 (exp)]
    GE        [reduce using rule 43 (exp)]
    GT        [reduce using rule 43 (exp)]
    LE        [reduce using rule 43 (exp)]
    LT        [reduce using rule 43 (exp)]
    NEQ       [reduce using rule 43 (exp)]
    EQ        [reduce using rule 43 (exp)]
    MINUS     [reduce using rule 43 (exp)]
    PLUS      [reduce using rule 43 (exp)]
    DIVIDE    [reduce using rule 43 (exp)]
    TIMES     [reduce using rule 43 (exp)]
    $default  reduce using rule 43 (exp)


state 99

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   46    | FOR ID ASSIGN exp TO exp . DO exp

    DO      shift, and go to state 105
    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45


state 100

   21 typefields: ID COLON . ID COMMA typefields
   22           | ID COLON . ID

    ID  shift, and go to state 106


state 101

   17 funcdec: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 107


state 102

   19 funcdec: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 108
    expseq  go to state 14


state 103

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN . COLON ID EQ exp
   18        | FUNCTION ID LPAREN typefields RPAREN . EQ exp

    COLON  shift, and go to state 109
    EQ     shift, and go to state 110


state 104

   15 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 111
    expseq  go to state 14


state 105

   46 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 112
    expseq  go to state 14


state 106

   21 typefields: ID COLON ID . COMMA typefields
   22           | ID COLON ID .

    COMMA  shift, and go to state 113

    $default  reduce using rule 22 (typefields)


state 107

   17 funcdec: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 114


state 108

   19 funcdec: FUNCTION ID LPAREN RPAREN EQ exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 19 (funcdec)


state 109

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 115


state 110

   18 funcdec: FUNCTION ID LPAREN typefields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 116
    expseq  go to state 14


state 111

   15 vardec: VAR ID COLON ID ASSIGN exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 15 (vardec)


state 112

   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp
   46    | FOR ID ASSIGN exp TO exp DO exp .

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    OR        [reduce using rule 46 (exp)]
    AND       [reduce using rule 46 (exp)]
    GE        [reduce using rule 46 (exp)]
    GT        [reduce using rule 46 (exp)]
    LE        [reduce using rule 46 (exp)]
    LT        [reduce using rule 46 (exp)]
    NEQ       [reduce using rule 46 (exp)]
    EQ        [reduce using rule 46 (exp)]
    MINUS     [reduce using rule 46 (exp)]
    PLUS      [reduce using rule 46 (exp)]
    DIVIDE    [reduce using rule 46 (exp)]
    TIMES     [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)


state 113

   21 typefields: ID COLON ID COMMA . typefields

    ID  shift, and go to state 89

    $default  reduce using rule 20 (typefields)

    typefields  go to state 117


state 114

   17 funcdec: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 118
    expseq  go to state 14


state 115

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 119


state 116

   18 funcdec: FUNCTION ID LPAREN typefields RPAREN EQ exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 18 (funcdec)


state 117

   21 typefields: ID COLON ID COMMA typefields .

    $default  reduce using rule 21 (typefields)


state 118

   17 funcdec: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 17 (funcdec)


state 119

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    IF      shift, and go to state 5
    WHILE   shift, and go to state 6
    FOR     shift, and go to state 7
    LET     shift, and go to state 8
    BREAK   shift, and go to state 9
    MINUS   shift, and go to state 10

    lvalue  go to state 12
    exp     go to state 120
    expseq  go to state 14


state 120

   16 funcdec: FUNCTION ID LPAREN typefields RPAREN COLON ID EQ exp .
   25 exp: exp . PLUS exp
   26    | exp . MINUS exp
   27    | exp . TIMES exp
   28    | exp . DIVIDE exp
   34    | exp . EQ exp
   35    | exp . NEQ exp
   36    | exp . LT exp
   37    | exp . LE exp
   38    | exp . GT exp
   39    | exp . GE exp
   40    | exp . AND exp
   41    | exp . OR exp

    OR      shift, and go to state 34
    AND     shift, and go to state 35
    GE      shift, and go to state 36
    GT      shift, and go to state 37
    LE      shift, and go to state 38
    LT      shift, and go to state 39
    NEQ     shift, and go to state 40
    EQ      shift, and go to state 41
    MINUS   shift, and go to state 42
    PLUS    shift, and go to state 43
    DIVIDE  shift, and go to state 44
    TIMES   shift, and go to state 45

    $default  reduce using rule 16 (funcdec)
